%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 276.250708 633.250708
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 28 64
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 28 64
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: THSarabunNew
%!FontType1-1.0: THSarabunNew 1.0000.1.0030
14 dict begin/FontName /THSarabunNew def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /one put
dup 34 /two put
dup 35 /three put
dup 36 /four put
dup 37 /five put
dup 38 /six put
dup 39 /eight put
dup 40 /nine put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -427 1 index div -421 2 index div 947 3 index div 836 5 -1 roll div]cvx def
/sfnts [<




0171410300C6000A00017141030016000A000171410300F4000A00015D41030020000A00017241030016000D0001724103008B000E00015D410500CC000E00DC000E00025D410300CD000E000171410300FD000E00015D4103005C000E0001724103000B000E0001714103001A000E00017141030062000E00015D41050076001100860011000271410300470011000171410300B9001100015D41030089001100015D410300F9001100015D4103003B00110001714103004C001100015D4103003D001100015D4103007C001100015D4103005B0011000172410300AA001100017141030029001100017141030009001100015D410300990011000171410300160011000171410300050011000172410300350011000172B8001110B900100001F44103002A00100001714103005A00100001724103000B001000015D4103008B001000015D410300CC001000015D4103000D0010000171410300FC001000015D410300BB001000015D4105001B0010002B00100002724103004A001000015D410300390010000171410300870010000171410300240012000172410300E6001200015D41030016001200015D41030014001200017141030043001200017241030025002200015D410300460022000171410300D7002200015D410300CB002200017141030009002200017241030057002200015D41030096002200015D4105003400220044002200025D41030060002200015DB8002210B900130001F441030034001300015D41030015001300015D41030096001300017141030026001300015D41030096001300015D41030045001300015D41030052001300015D41030060001300015D41030044001400017241030046001400015D41030017001400015D410300A7001400017141030026001400017241030034001400015D41030052001400015DB8001D10B900170001F4410300A800170001714103004A001900015D410300CF001900017141030038001900015D41030027001900015D41030098001A000171410300CA001A0001714103006A001A00015D4103002B001A00015D4103005E001A00015D4103003F001A00015D4103004D001A00015D410300DB001A00015D4103005A001A000172410300B9001A00015D41030008001A00015D410300C8001A00015D41030019001B00015D41030057001B00017241030085001E00015D410300A4001E00015D41030044001F00015D410300A5001F00017141030015001F00015D410300C6001F00017141030016001F00017141030035001F00015D410300D4001F00017141030024001F00015D41030092001F000171410300AC0021000171410300DB00210001714105005300210063002100025D41030015002300015D41030064002400015D410300E4002400015D410300330025000172






270001714103006100270001714103009A002900015D410300C6002900015D410300F5002A00017141030006002A000171410300C2002A00015D410300C0002A000171BA002B001C0016111239410300D5002B00015D41050096002B00A6002B000271410300C6002B00015D41030026002B00017141030017002B00017141030037002B00015D4103009C002B00015D41030049002B00017241030047002B000171410300F6002B00017141030046002B00015D41030026002B00015D410500C5002B00D5002B00027141030085002B00017141050064002B0074002B00027141030012002C000172410300A4002C00017141030086002C000171410300B8002C0001714103004B002C0001724103000A002C00017241050078002C0088002C00025D410300F5002C00017141050023002C0033002C000272410300E2002C00015D41030090002C000171410300A8002D00015D41030094002D000171B8002810B8002FDC00B800142FB800032FB800004558B800252F1BB9002500123E59B800004558B800192F1BB90019000A3E59BB00250001000F00042B4103000D0001000172410300FE00010001714103001B00010001724103002A00010001724103004D00020001724103002F0025000172B8002510B80003DC41030053000300015D41030014000300015D410300260003000172410300170003000172410300B9000300015D4103007D00030001714103003E0003000172410300BE0003000171410300FD0003000171410300480003000172410300070003000171410300C6000300017141030093000300015D410300D2000300015D410300100003000171410300FC00050001714103000D00050001724103001B0005000172410300290005000172410300260007000172410300050007000172410300140007000172B8001910B900090001F44105003600090046000900027241030087000B00017141030025000B00017241050003000B0013000B000272410300CA000F0001714103002F000F000172410300EA000F000171410300F9000F000171410300D9000F00017141030097001300015D4103001300130001724103002100130001724103000500140001724109008500140095001400A5001400B50014000471410300370014000171410300F800140001714103006C00140001724103007C001400015D4103003A001400015D410300B7001400015D410300E50014000171410300450014000172410300220014000172410300100014000172410300E5001500017141030094001500015D410500130015002300150002724103001A001700015D410300DC0017000171410300CE0017000171410300EE0017000171410500DC001700EC001700025D410300FB0017000171410300FA001700015D41030049001700015D41
0300EA001B0001714103001B001B00015D410500CD001B00DD001B000271410300EB001B00015D410300FB001B000171410300DA001B00015D410300FA001B00015D410300D6001D00015D410300FB001D000171410300D5001D000171410300C2001D00017141030016001E000171410500E5001E00F5001E00027141030033001E000172B8000310B8001FD0B8001F2F410300D4001F00015D41030034001F000172410300B5001F00017141030015001F00017241030006001F00017241030096001F00015D41030057001F00015D41050029001F0039001F00025D410300C9001F00015D410300EA001F00015D410300CA001F000171410300F9001F00015D41030009001F00017141030078001F00017141050016001F0026001F00027141030046001F00017141030096001F00017141030015001F00015D410500E5001F00F5001F00027141030084001F00017141030063001F00017141030020001F000172410300250021000172410300D5002300015D4103001500230001724103000500240001724103002B0027000172410300EA0027000171410500D5002700E5002700025D41030017002800015D410300E50029000171410300890029000171410300950029000171410300A40029000171410300200029000172B8000310B8002BD0B8002B2F41030014002B00015D41030035002B00017241030085002B000171410300D5002B00015D410300E6002B00017141030096002B00015D41030047002B00017141030047002B00017241030079002B000171410300C9002B00015D410300FA002B00015D410300EC002B00015D410300CA002B00017141030009002B00017141050029002B0039002B00025D41030017002B00017141030016002B00017241050026002B0036002B00027141030055002B000171410300B5002B00015D410300F5002B00017141030005002B000172410300B5002B00017141030063002B00017141030020002B00017241030077002C00015D41030034002C000172410300D5002D00015D410300E8002D000171410300E6002D00015D410300D5002D000171410300C2002D0001713031410300480003000172410300230014000172410300350014000172253426270E0115141633323603342623220615141736171406232226353436372E01353436333216151406071E010120363635363D2F2E3D0F322A2B325C5D3750444350392C25314A3B3A4A31252C397D2747030347272D35350119232E2E233E1717AB404848403147090B39213544443521390B094700020026FFF4014201E0001500210619B800222FB800162FB900000007F44103002C0001000171410300BC000100015D410300A40002000171410300250002000171410300030002000172410700D0000200E0000200F00002000371


00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/three 3 def
/four 4 def
/five 5 def
/six 6 def
/eight 7 def
/nine 8 def
/nonmarkingreturn 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-427 -421 947 836}def
/UniqueID 4390734 def
currentdict currentfile eexec

C4ED4C286F06E0B191807D7A2FCB2274B06C71E59BE464275A752BBF1518170CEF09FA9E61755C2D82AC531F4A525B3CC2ADF36AE1B73185A13425706E33AFA24C329B621A5094497834FB52FBE12403CC79EC1BA2ECACFF837610FC3AACEA6AFAB3E51E184D595B1E1945CC136CD34CAE8780A0DEFC1424AC6692002A83F93861B1AB381F3FC3F53754C08A19588E3DB7D1D1461B899EE21F4B8EC25418F959F972A822ACFFB9835E241C52F966E191BB64C472BEE72B8050E8B3A57189F89CAFC1F6C1C20D413B1AF87F3AB4A52A2E5B842D78CFB7147AA891598FF5973EC67DA5C798EB2A9587312269A2E11F344A3ABC00F5DB6A93AE455F6AC56C922451B97A25ACF72AE3AA5F59ABD98C511AC2FF10BCA3F05EFB50E23E6FF7FFF3DF5B51ACDBF1D78B6CE3590AFC34AF2CE9B4B068DF44F01064A9A82822D2B68D46F3BF2452549742951B368D6C5D897B22B5BED22CE7845BDEE6F966784EF63919935EBD99650B2FC0E93A3D3BCBE25B22F61C457BA7EF2DBBFFF3B408AD18E8AD9A6BE1FE629A24056ACDE0D5DCB62E5AB4472AA48E7F4442873B232808A0F4C88075808AEA8933E418C0D04818A99D1943CCAE649291106528BBA50CD1947C99B4CBA4E8B1E7908D736851FC1E3B8D80D97CE759D29807D17777EEAB5EDD027D77353B57A3A9A6ABBA9B5CFE52BD3B9F51EC1248F18BD34BDB30A1DB6FB4F3B655B11D7F606678573FDCE194CA14F2B164823AD0462103D13D678D7C5A138E0E416B9E02A86D9E2ACEFB47DAABFC4414EAE572BE2282692F66B8532AB8ED5906847A320BE01434657BFF5A81740F6DC939426FB93BAF2EDDBE94783FB6AF25E2FB5B968B867FC7DB23AF34DB8A86A460C53D29DE50BA3A11E377CF135B24B1A33EE7B806D9E68F3DA222A8B5366A459456A750A36D188E504808FE050E624345EFAADC4FEC5B1A159CAFE35156C833EB3CB1D4FBCAFA109A9C9A2390C33972C7BD4C3EB8ACD98C89A9D71E3D0411E8BF25459A3150D7AF9FB0D13DCDB79079195CA1A3F6CB1236A23901C371BE42ABE56C32FA61451FCBAF3D7DB1F4C6F45B357B68DBBA44ED894C6483621CA827C6118158114DAB4F375CC9AAF508DB81CE2DE72C8B020E43E75A317B8F1753F27339924BB9727FD4BF1762FB136594A877276A477FD301A60000AD17C3F0F0136CC7E191A00FA2171D115F8417A5DBD4FE8BF7F9AF7ADC9631B0D450FD8B84EC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/THSarabunNew cguidfix
/F1.1/THSarabunNew renmfont
%RBIBeginFontSubset: Thonburi
%!FontType1-1.0: Thonburi 1.0000.1.0000
14 dict begin/FontName /Thonburi def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /T put
dup 34 /m put
dup 35 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2560 -1531 1 index div -1463 2 index div 3957 3 index div 3585 5 -1 roll div]cvx def
/sfnts [<


00082B00BF00010049003F0032001E0013000000082BBF00020051003F003200250013000000082BBF0003004300320027001E0013000000082BBF0004003D00320027001E0013000000082B00BA0007000400072BB8000020457D6918440000
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/one 1 def
/T 2 def
/m 3 def
/luthai_saraaathai 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.000390625 0 0 0.000390625 0 0 ] def
/FontBBox{-1531 -1463 3957 3585}def
/UniqueID 4158355 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D189384B9AF89DBB8BFB662B7E36BEF91DB024A65FF6A039BD6A75B68A5E32D11EE850D302B3B6A88657357AB54B898CC548E25C12509F472D4B7AD399A67366933CB32DB9124906784EF566491584D36B1021E29A66145D8C4A72EFBF5FA02E2AD2C3D897CFDECA1F5A3A9860DC86986466809D00938CE870DD9D79D81E80D2C3B8D3DBB3D46DE1F4CBBD4804985BB95411A08FD7EDC9597101181F5C65BC2BDE53479B9A207E4784286FB365425157E4CEB1C484D87B98D2BBA1C2C089537C62002EA313468F5425D340E91BA82C0DED1FB8E254CF9CD6623A56D32185994CC3EDA1DB7FDB20E78FB3348AAD0BC1A44905481671DFDD7DEB3155C646DFF62B6A88BB600A79E3DB6260E777603B3245D02AAA3BDEDE4E6AC874D3224E7376FB25B0082D8B55D300885D55E5E91947CCAB715849D0E372CA5323821DD043755A6AFF9033E37E10144B624D69FAEB3F031B4EBE7F12C0DAE50C3A71F0A25D424465F7193A5A0CBF54DD99D547C5EC33FDB1575813F9F43792EB72A8001EEEDA07FE0F7F8FD0D9922EC424A08D9F6D2DF7AFA8C2E09E479C2C16CC8337637B769FC57B61F8FE6C954CADF7B5F175A4A336BE53584DCD4CC6C288D8ADB6C4B9C13FB9D29BC5385045EF01392DE6169CF22E4DA7404031D684C2E010F2A846A06E00E97C067F2649A3D6D1AB0AE6F666D9F6C54BC1D0982043D40C4398691BEC8FDAAA1C212337CD4158
37AD7085C41EAA91E7BD13CBE0645293F731852BD7B8B911DC3768FDD50ACE46DD1AD6F21248D19903C04361E6F9137D9E3EE757B839DB8E608249A2D2049A988E7AE0C1C2BE7C44F22B3EB2F8D0AFEE3D1A8B5749C1728CD43DEDD9D6F8A59243107FE1FAB858FC0FC96AC7056C645FB376E07DB48DF53DA03A1DD1591429BA4B814950D765F4D92CF4DB1E048EB6818A0A0322A7B5770B9FF3A2468A9DADB120B525158855DE6AF06B6B946171055BFDA905DCB076FAEEF81452ABB9C8DAE2AAE1148D505EC4062E34CBCFAF46B7C648BE33098648D42E78DA55C4CEBDC60B335220976CE276A6038274D9DB430F6A72E0654BC2FDF216891FA58D5238AAB7A8350F24B04ADFD8A64A78B3212081A67C71DC8C9F488694491EF5342A10FE9E6F6744ACE0441040B6508BA2FC262DCB131BE68BA7ED9AD00F7D137D44E1951F1AB47A53968DD991C6E3481A2F95B37D051E7A49B9EC16B2DBB53138EBDEF6282840FDB3BD8689A9A60BA491E7A1EE7CCC623C757AF3258F1F88C24E7A0F23F2E08CF1DF378CE32B024C0088FE07C09C5ABB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Thonburi cguidfix
/F2.1/Thonburi renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 27.625071 63.325073 rc
5.8217216 61.321724 m
6.876142 60.267307 6.876142 58.557766 5.8217216 57.503349 c
4.7673068 56.448929 3.0577641 56.448929 2.0033493 57.503349 c
0.94892901 58.557766 0.94892901 60.267307 2.0033493 61.321724 c
3.0577641 62.376144 4.7673068 62.376144 5.8217216 61.321724 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
1819.0919 808.90814 m
1829.6361 819.45227 1829.6361 836.54773 1819.0919 847.09186 c
1808.5477 857.63605 1791.4523 857.63605 1780.9081 847.09186 c
1770.3639 836.54773 1770.3639 819.45227 1780.9081 808.90814 c
1791.4523 798.36395 1808.5477 798.36395 1819.0919 808.90814 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 3.9125354 59.412537 cm
/F1.1[ 30 0 0 -30 0 0]sf
-10.86 5.0500183 m
(!!)[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
5.8217216 51.421722 m
6.876142 50.367306 6.876142 48.657764 5.8217216 47.603352 c
4.7673068 46.548931 3.0577641 46.548931 2.0033493 47.603352 c
0.94892901 48.657764 0.94892901 50.367306 2.0033493 51.421722 c
3.0577641 52.476143 4.7673068 52.476143 5.8217216 51.421722 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
1819.0919 907.90814 m
1829.6361 918.45227 1829.6361 935.54773 1819.0919 946.09186 c
1808.5477 956.63605 1791.4523 956.63605 1780.9081 946.09186 c
1770.3639 935.54773 1770.3639 918.45227 1780.9081 907.90814 c
1791.4523 897.36395 1808.5477 897.36395 1819.0919 907.90814 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 3.9125354 49.512535 cm
-10.86 5.0500183 m
(!")[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
5.8217216 41.521721 m
6.876142 40.467308 6.876142 38.757763 5.8217216 37.70335 c
4.7673068 36.64893 3.0577641 36.64893 2.0033493 37.70335 c
0.94892901 38.757763 0.94892901 40.467308 2.0033493 41.521721 c
3.0577641 42.576141 4.7673068 42.576141 5.8217216 41.521721 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
1819.0919 1006.9081 m
1829.6361 1017.4523 1829.6361 1034.5477 1819.0919 1045.0919 c
1808.5477 1055.6361 1791.4523 1055.6361 1780.9081 1045.0919 c
1770.3639 1034.5477 1770.3639 1017.4523 1780.9081 1006.9081 c
1791.4523 996.36395 1808.5477 996.36395 1819.0919 1006.9081 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 3.9125354 39.612537 cm
-10.86 5.0500183 m
(!#)[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
15.721722 41.521721 m
16.776142 40.467308 16.776142 38.757763 15.721722 37.70335 c
14.667307 36.64893 12.957765 36.64893 11.903349 37.70335 c
10.848929 38.757763 10.848929 40.467308 11.903349 41.521721 c
12.957765 42.576141 14.667307 42.576141 15.721722 41.521721 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
1918.0919 1006.9081 m
1928.6361 1017.4523 1928.6361 1034.5477 1918.0919 1045.0919 c
1907.5477 1055.6361 1890.4523 1055.6361 1879.9081 1045.0919 c
1869.3639 1034.5477 1869.3639 1017.4523 1879.9081 1006.9081 c
1890.4523 996.36395 1907.5477 996.36395 1918.0919 1006.9081 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 13.812535 39.612537 cm
-10.86 5.0500183 m
(!$)[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
15.721722 31.621721 m
16.776142 30.567307 16.776142 28.857765 15.721722 27.80335 c
14.667307 26.74893 12.957765 26.74893 11.903349 27.80335 c
10.848929 28.857765 10.848929 30.567307 11.903349 31.621721 c
12.957765 32.676144 14.667307 32.676144 15.721722 31.621721 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
1918.0919 1105.9081 m
1928.6361 1116.4523 1928.6361 1133.5477 1918.0919 1144.0919 c
1907.5477 1154.6361 1890.4523 1154.6361 1879.9081 1144.0919 c
1869.3639 1133.5477 1869.3639 1116.4523 1879.9081 1105.9081 c
1890.4523 1095.3639 1907.5477 1095.3639 1918.0919 1105.9081 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 13.812535 29.712536 cm
-10.86 5.0500183 m
(!%)[ 10.860000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
25.621721 31.621721 m
26.676142 30.567307 26.676142 28.857765 25.621721 27.80335 c
24.567307 26.74893 22.857765 26.74893 21.80335 27.80335 c
20.74893 28.857765 20.74893 30.567307 21.80335 31.621721 c
22.857765 32.676144 24.567307 32.676144 25.621721 31.621721 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
2017.0919 1105.9081 m
2027.6361 1116.4523 2027.6361 1133.5477 2017.0919 1144.0919 c
2006.5477 1154.6361 1989.4523 1154.6361 1978.9081 1144.0919 c
1968.3639 1133.5477 1968.3639 1116.4523 1978.9081 1105.9081 c
1989.4523 1095.3639 2006.5477 1095.3639 2017.0919 1105.9081 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 23.712536 29.712536 cm
-10.86 5.0500183 m
(!&)[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
15.721722 21.721722 m
16.776142 20.667307 16.776142 18.957764 15.721722 17.903349 c
14.667307 16.848928 12.957765 16.848928 11.903349 17.903349 c
10.848929 18.957764 10.848929 20.667307 11.903349 21.721722 c
12.957765 22.776142 14.667307 22.776142 15.721722 21.721722 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
1918.0919 1204.9081 m
1928.6361 1215.4523 1928.6361 1232.5477 1918.0919 1243.0919 c
1907.5477 1253.6361 1890.4523 1253.6361 1879.9081 1243.0919 c
1869.3639 1232.5477 1869.3639 1215.4523 1879.9081 1204.9081 c
1890.4523 1194.3639 1907.5477 1194.3639 1918.0919 1204.9081 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 13.812535 19.812536 cm
-10.86 5.0500183 m
(!')[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
15.721722 11.821722 m
16.776142 10.767307 16.776142 9.0577641 15.721722 8.0033493 c
14.667307 6.9489293 12.957765 6.9489293 11.903349 8.0033493 c
10.848929 9.0577641 10.848929 10.767307 11.903349 11.821722 c
12.957765 12.876142 14.667307 12.876142 15.721722 11.821722 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
1918.0919 1303.9081 m
1928.6361 1314.4523 1928.6361 1331.5477 1918.0919 1342.0919 c
1907.5477 1352.6361 1890.4523 1352.6361 1879.9081 1342.0919 c
1869.3639 1331.5477 1869.3639 1314.4523 1879.9081 1303.9081 c
1890.4523 1293.3639 1907.5477 1293.3639 1918.0919 1303.9081 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 13.812535 9.9125357 cm
-10.86 5.0500183 m
(!\()[ 10.860000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.1 0 0 -0.1 -176.08746 142.21254 cm
1800 855 m
1800 890.09998 l
S
0 i
CM
3.9125354 52.402538 m
4.2125354 53.202538 l
3.6125355 53.202538 l
h
3.9125354 52.402538 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1800 898.09998 m
1803 890.09998 l
1797 890.09998 l
h
1800 898.09998 m
S
1 J
1 j
0.60000002 i
1800 954 m
1800 989.09998 l
S
0 i
CM
3.9125354 42.502537 m
4.2125354 43.302536 l
3.6125355 43.302536 l
h
3.9125354 42.502537 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1800 997.09998 m
1803 989.09998 l
1797 989.09998 l
h
1800 997.09998 m
S
1 J
1 j
0.60000002 i
1819.0919 946.09186 m
1872.9078 999.90778 l
S
0 i
CM
11.768999 41.656071 m
11.415445 42.433891 l
10.991181 42.009624 l
h
11.768999 41.656071 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1878.5646 1005.5646 m
1875.0291 997.78644 l
1870.7865 1002.0291 l
h
1878.5646 1005.5646 m
S
1 J
1 j
0.60000002 i
1812.078 1050.1561 m
1882.4945 1190.9891 l
S
0 i
CM
12.519761 22.398085 m
12.430318 23.247791 l
11.893661 22.979464 l
h
12.519761 22.398085 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1886.0723 1198.1445 m
1885.1779 1189.6475 l
1879.8113 1192.3307 l
h
1886.0723 1198.1445 m
S
1 J
1 j
0.60000002 i
1899 1053 m
1899 1088.1 l
S
0 i
CM
13.812535 32.602539 m
14.112535 33.402538 l
13.512536 33.402538 l
h
13.812535 32.602539 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1899 1096.1 m
1902 1088.1 l
1896 1088.1 l
h
1899 1096.1 m
S
1 J
1 j
0.60000002 i
1918.0919 1045.0919 m
1971.9078 1098.9078 l
S
0 i
CM
21.668999 31.756073 m
21.315445 32.53389 l
20.891182 32.109627 l
h
21.668999 31.756073 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1977.5646 1104.5646 m
1974.0291 1096.7865 l
1969.7865 1101.0291 l
h
1977.5646 1104.5646 m
S
1 J
1 j
0.60000002 i
1978.9081 1144.0919 m
1925.0922 1197.9078 l
S
0 i
CM
15.856072 21.856071 m
16.63389 22.209625 l
16.209625 22.63389 l
h
15.856072 21.856071 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1919.4354 1203.5646 m
1927.2135 1200.0291 l
1922.9709 1195.7865 l
h
1919.4354 1203.5646 m
S
1 J
1 j
0.60000002 i
1899 1152 m
1899 1187.1 l
S
0 i
CM
13.812535 22.702538 m
14.112535 23.502537 l
13.512536 23.502537 l
h
13.812535 22.702538 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1899 1195.1 m
1902 1187.1 l
1896 1187.1 l
h
1899 1195.1 m
S
1 J
1 j
0.60000002 i
1899 1251 m
1899 1286.1 l
S
0 i
CM
13.812535 12.802537 m
14.112535 13.602537 l
13.512536 13.602537 l
h
13.812535 12.802537 m
f
0 J
0 j
0.1 0 0 -0.1 -176.08746 142.21254 cm
1899 1294.1 m
1902 1286.1 l
1896 1286.1 l
h
1899 1294.1 m
S
/Cs2 SC
0 sc
0.1 0 0 -0.1 2.1187854 45.012535 cm
/F2.1[ 16 0 0 -16 0 0]sf
-5.1218748 5.9655762 m
(!)s
0.1 0 0 -0.1 12.162536 34.962536 cm
-5.1218748 5.9655762 m
(!)s
0.1 0 0 -0.1 13.740661 2.7625353 cm
-13.817187 4.6659851 m
(")s
/F2.1[ 10 0 0 -10 0 0]sf
0.48906249 9.6659851 m
(##)[ 6.664063 0.000000 ] xS
ep
end
%%Trailer
%%EOF
