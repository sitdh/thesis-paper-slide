%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 564.250708 474.250708
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 57 48
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 57 48
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /A put
dup 35 /B put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C00000000020037FF5B04A802FA000B00110023B800142BBB00060003000300182B00B800042FB800112FBB00090002000000182B3031372226351133111416332115050901370901F75E62622E30034EFEA20136FECA42017FFE8276606101C3FE3D30345DD7010401004BFEB5FEB80001000000010000451BB6635F0F3CF5011103E800000000B643600000000000D34D8599FC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000000501F400330288FFFA02AD004E02D2002B04BE0037000000480078013C01AA01E00001000000050096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/A 1 def
/B 2 def
/C 3 def
/uni2B91 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E7882B3267FBEDEB677400A54C3FF791059355FC781EA890EE12CE6212CB47D9946BF6264598FD8C1A7061938A62AD044A2F5F8E09C56F51E3F574CE651955DA86EE9B7C8637A112CDC10EC98B6F44EFFF408A83861FF8FC3979F546A47325B9D47387821D032F57A4169081C6661ADBEF0DC0BDD64D3594C8F44E3DC9D3EFAF4429AF4175446C27205E9C80CE98C186BEB00E139D2B245914E203F92FF929C6DA0FFFA846F7661E9212DAE5798B61E1ECE4E4678B429F7828BC63F7C5A824D540B532888B9F504BA4805B36136B9322F77066EA2BA06FE79A6B68EEB5C736F8284F4636EA5D89BEC9EB7EDAA116234BAC612E9DAA9436C9BA0DDC2BB0AB527B8C3E5A332474ADFFE9515A2691FB35440D95F57B6BF515A257A3B2300A7DBF67F9C556BB44FD225CF27AB0918922D0CD124A0943FA44523E6F95477787E76414DB593A08BB17D7901CD3C4959114770548DFC9600740BDDD4DCC0F70B28E30726FABFABB7C280CF150B8DC13450995DEB259922A57547DF2D3F16E2ECFA1002B16BC26E0F21151A63998163EE327057194F4AF2F9931713F0D5F747CF2CD78184370E549AE3AC6C2D4501370CEC64285560DFB69E77E4E7BE5F60C7DD9A9B2EE44F12BA8B4737A7876C99D46D31AA859AC636EF64B28B275A19CCCBD3182EACB0AA995250191E15A74715E0221657441D5F46B320F052A22CF34E0E85707DA3FF57E3BBF5FF
2A96FED66598CD6BB2CA5948B7AA733BD9EA5881B327CBB7D2C23F47E5BF645BFF19CC9FBBB830DFB009A159CFAE00A1AFA9965F0A30C2FFD24B6C4ADDC4BDC95627C0373F4C50F803884A2EB50E0E9C25697A087E166A6C1F5527C4AA6CD6320E1248F03D2FEFB2FD3F1B204EED397E976237C2E114D0E0722D6BB65E3F43B2062318BC93C1DA0E80D0D4C46FCCF45A60840E3CE716C98B09CBF48BAF550F0C26578B0565EBE7A82228AC2BD2DE046C52510D209DD53270E67B4C6A9825ABA743A4848CFCDB9F4892D668E6E86921533ED21F14FFB061740608C121057380B96320148F4C08482672029C3E74AF352CA857C718810F51D290C22744D7FDB9147000E7BB7B4A1F920C2AE91982337BE588146B2374F4AF9B930D94F5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Thonburi
%!FontType1-1.0: Thonburi 1.0000.1.0000
14 dict begin/FontName /Thonburi def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /o put
dup 35 /f put
dup 36 /t put
dup 37 /w put
dup 38 /a put
dup 39 /r put
dup 40 /e put
dup 41 /space put
dup 42 /quotedblleft put
dup 43 /F put
dup 44 /quotedblright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2560 -1531 1 index div -1463 2 index div 3957 3 index div 3585 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 14 dict dup begin
/.notdef 0 def
/space 1 def
/F 2 def
/S 3 def
/a 4 def
/e 5 def
/f 6 def
/o 7 def
/r 8 def
/t 9 def
/w 10 def
/quotedblleft 11 def
/quotedblright 12 def
/luthai_saraaathai 13 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.000390625 0 0 0.000390625 0 0 ] def
/FontBBox{-1531 -1463 3957 3585}def
/UniqueID 4158355 def
currentdict currentfile eexec


59DFC3464D0C2244CEA7E44D8326234E8CB4FD79CA98D62B737DB5EABD146F58ED069719AECE459ABD2023F16CB04071FB0126172191F975D6597C4B3CAD1C3D8B2DD8DD503E4D688FE54416652B04AA1FFF49A4CF943417D441C9270B39A9AD0E559357B5815E01DAE14B372FE0F97533FF36EB1971F205D163035401BFCF6106F479E49A61FFC82FBE5CA96F80A8EF19139570D4D124A5F1ADF662AF7CCF065F8F575FC66CE8A1AE34C1792CA07FC5EEF5CB212B7B03E00BFCF551722AAC295E4C31132571D3BC1C6266FD0CCA318BB03A901FEDBB39856778BFD26881D438928C4EC05993096C3062D672BAB7EFBF87306F03C4B995D16B7BB2036C164CE5377A3B7D635065CA7F5964443517399BA74DCCD704243FD060F77EC482B823B497A7F7923DB128BAB825749D7F813C94B6128C8F4964FA131947893DBFE51591DCB09B170CEF30551158FE260A7E4F6B60967F777F87610B1327A72EFA0FBD8F15F15D37CB9800A8F8F435D220DF744E617AAFBD473992DDD5BE4B58A0829923DE7F56F3D300EE60799886E0BE9FF97CAB3C7A11C2C97E7C40E4DE21667B6CC487FC0B42EAEF06C367968C761A32D41AC32896BF708014DEC92A2E5E3A164289AE07DDF234AA2486FF755347BB316A4B73D215301D57BBB213D32900FF9426A62C257B804FB0EA7F9BDB7723BEF1D0D121CA8F89C28F28F6529A2E30F97CB8BB0D40FE22746910A0A4341F792BF6E87847E6ADD2E457984D53C501A5C07A8E8E62C0C0A99DE121B890FC929739BF9ECB231331C466852E28EDE46AA2AC769639F5DBD83B5D6BFB8712AC9D856EBB3815DAB7F8080C1784C84AF89E33500F646C6CAAC4F9BAA1222BAF3CA1CA3A5419785EC14D240E2B7557BCBFC0DF9E935933937943E5431D4416154932E0D79CB2D2A7D98F9C7CB15A158B766816D8AC63A10D9086AD7C6B2E3437B6377C371A157722921E00A42938F67D17B056209DD2C8DB827B713A0FD9EFC8B26A875C0BEF384A27C982347BD4528CD832AFECA4A3F63503C1800F8EC228BFF9A3D8D5B4E8D02389D117BE69C384AB17A8CED1D208FA89C6767128794C89EDB858EA78FC6B7E7F9816E1876FD08A8A80F53CCC4C672D00154EA2B01B698FA017B71DBDC42A04563D6C11193E7646A6009AA8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Thonburi cguidfix
/F2.1/Thonburi renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 56.425072 47.425072 rc
1.2125354 46.212536 m
55.212536 46.212536 l
55.212536 1.2125354 l
1.2125354 1.2125354 l
h
1.2125354 46.212536 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -171.58746 89.412537 cm
1728 432 m
2268 432 l
2268 882 l
1728 882 l
h
1728 432 m
S
0 i
1 1 1 sc
CM
49.526314 16.226315 m
51.107944 14.644692 51.107944 12.080379 49.526314 10.498756 c
47.944695 8.9171257 45.380379 8.9171257 43.798756 10.498756 c
42.217125 12.080379 42.217125 14.644692 43.798756 16.226315 c
45.380379 17.807945 47.944695 17.807945 49.526314 16.226315 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -171.58746 89.412537 cm
2211.1377 731.86218 m
2226.9541 747.67841 2226.9541 773.32159 2211.1377 789.13782 c
2195.3215 804.9541 2169.6785 804.9541 2153.8623 789.13782 c
2138.0459 773.32159 2138.0459 747.67841 2153.8623 731.86218 c
2169.6785 716.0459 2195.3215 716.0459 2211.1377 731.86218 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 46.662537 13.362535 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.0249996 9.1500015 m
(!)s
/Cs1 SC
1 1 1 sc
CM
11.726315 24.326315 m
13.307945 22.744694 13.307945 20.180378 11.726315 18.598757 c
10.144692 17.017126 7.5803785 17.017126 5.9987564 18.598757 c
4.4171257 20.180378 4.4171257 22.744694 5.9987564 24.326315 c
7.5803785 25.907946 10.144692 25.907946 11.726315 24.326315 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -171.58746 89.412537 cm
1833.1378 650.86218 m
1848.9541 666.67841 1848.9541 692.32159 1833.1378 708.13782 c
1817.3215 723.9541 1791.6785 723.9541 1775.8622 708.13782 c
1760.0459 692.32159 1760.0459 666.67841 1775.8622 650.86218 c
1791.6785 635.0459 1817.3215 635.0459 1833.1378 650.86218 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 8.8625355 21.462536 cm
-8.1000004 9.1500015 m
(")s
/Cs1 SC
1 1 1 sc
CM
41.426315 38.726315 m
43.007946 37.144691 43.007946 34.580379 41.426315 32.998756 c
39.844692 31.417126 37.28038 31.417126 35.698757 32.998756 c
34.117126 34.580379 34.117126 37.144691 35.698757 38.726315 c
37.28038 40.307945 39.844692 40.307945 41.426315 38.726315 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -171.58746 89.412537 cm
2130.1377 506.86221 m
2145.9541 522.67841 2145.9541 548.32159 2130.1377 564.13782 c
2114.3215 579.9541 2088.6785 579.9541 2072.8623 564.13782 c
2057.0459 548.32159 2057.0459 522.67841 2072.8623 506.86221 c
2088.6785 491.0459 2114.3215 491.0459 2130.1377 506.86221 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 38.562534 35.862537 cm
-8.5625 9.1500015 m
(#)s
0.60000002 i
/Cs1 SC
0 0 0 sc
0.1 0 0 -0.1 -171.58746 89.412537 cm
1807.2059 639.0899 m
1829.0742 507.57855 1975.311 486.09372 2057.4102 511.4379 c
S
0 i
CM
34.910328 38.010239 m
34.250256 38.552738 l
34.056301 37.984951 l
h
34.910328 38.010239 m
f
0 J
0 j
0.1 0 0 -0.1 -171.58746 89.412537 cm
2064.978 514.02295 m
2058.3772 508.59799 l
2056.4377 514.27588 l
h
2064.978 514.02295 m
S
1 J
1 j
0.60000002 i
1844.7628 683.89008 m
1952.8029 690.87482 2037.6096 655.93097 2081.3086 581.63269 c
S
0 i
CM
36.932167 31.94875 m
36.281307 31.395229 l
36.805752 31.103752 l
h
36.932167 31.94875 m
f
0 J
0 j
0.1 0 0 -0.1 -171.58746 89.412537 cm
2085.1963 574.63788 m
2078.6877 580.17303 l
2083.9321 583.08783 l
h
2085.1963 574.63788 m
S
1 J
1 j
0.60000002 i
1826.3776 713.59271 m
1959.8892 907.62952 2097.5679 858.78436 2155.1338 802.57971 c
S
0 i
CM
44.480267 9.7318926 m
43.709785 9.3626232 l
44.142574 8.9470587 l
h
44.480267 9.7318926 m
f
0 J
0 j
0.1 0 0 -0.1 -171.58746 89.412537 cm
2160.6772 796.80646 m
2152.9724 800.49915 l
2157.3003 804.65479 l
h
2160.6772 796.80646 m
S
1 J
1 j
0.60000002 i
2134.6653 558.75629 m
2194.8145 609.01837 2212.7102 675.84271 2208.5208 718.52551 c
S
0 i
CM
49.149429 16.768782 m
49.561554 17.517216 l
48.967815 17.603657 l
h
49.149429 16.768782 m
f
0 J
0 j
0.1 0 0 -0.1 -171.58746 89.412537 cm
2207.3689 726.43756 m
2211.4902 718.95319 l
2205.5527 718.08881 l
h
2207.3689 726.43756 m
S
1 J
1 j
0.60000002 i
1841.2946 696.44995 m
1939.0924 742.40692 2015.741 782.91309 2132.8542 769.13464 c
S
0 i
CM
42.491249 12.601671 m
41.659378 12.796583 l
41.736336 12.201539 l
h
42.491249 12.601671 m
f
0 J
0 j
0.1 0 0 -0.1 -171.58746 89.412537 cm
2140.7871 768.10864 m
2132.4685 766.15955 l
2133.238 772.10999 l
h
2140.7871 768.10864 m
S
/Cs2 SC
0 sc
0.1 0 0 -0.1 10.562535 43.262535 cm
/F2.1[ 22 0 0 -22 0 0]sf
-81.64492 8.7651672 m
(!"#$%&'\(\)*+"",)[ 13.328906 13.328906 8.585156 9.753906 17.170313 12.168750 8.499219 12.667188 7.304688 10.828125 12.168750 13.328906 13.328906 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.1 0 0 -0.1 -171.58746 89.412537 cm
1833.8224 651.56329 m
1903.5665 592.88861 1996.3256 561.35907 2052.3281 546.53833 c
S
0 i
CM
34.419758 34.958111 m
33.570221 35.049145 l
33.719841 34.468098 l
h
34.419758 34.958111 m
f
0 J
0 j
0.1 0 0 -0.1 -171.58746 89.412537 cm
2060.0723 544.54425 m
2051.5769 543.63391 l
2053.073 549.4444 l
h
2060.0723 544.54425 m
S
ep
end
%%Trailer
%%EOF
