%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 985.250708 641.250708
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 99 65
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 99 65
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Inconsolata
%!FontType1-1.0: Inconsolata 001.010%%CreationDate: 2/22/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.010) readonly def/FullName (Inconsolata) readonly def/FamilyName (Inconsolata) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -125 def/UnderlineThickness 50 defend readonly def/FontName /Inconsolata def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /zero putdup 34 /one putdup 35 /colon putdup 36 /space putdup 37 /i putdup 38 /f putdup 39 /parenleft putdup 40 /F putdup 41 /I putdup 42 /R putdup 43 /S putdup 44 /T putdup 45 /underscore putdup 46 /C putdup 47 /O putdup 48 /N putdup 49 /D putdup 50 /parenright putdup 51 /braceleft putdup 52 /two putdup 53 /three putdup 54 /s putdup 55 /w putdup 56 /t putdup 57 /c putdup 58 /h putdup 59 /E putdup 60 /four putdup 61 /a putdup 62 /e putdup 63 /A putdup 64 /five putdup 65 /slash putdup 66 /ellipsis putdup 67 /six putdup 68 /b putdup 69 /r putdup 70 /k putdup 71 /semicolon putdup 72 /seven putdup 73 /B putdup 74 /eight putdup 75 /nine putdup 76 /braceright putdup 77 /l putdup 78 /u putdup 79 /n putdup 80 /U putdup 81 /L putreadonly def/FontBBox {-1 -177 510 835} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF1D53D6B9105969026449EB2781820339C2C5D7F4444F9CB3D324A038EB31B20ED0726DA93C9D0BB2DA2DB6016332BBAE24B03CE537736D080D6D2C9829261C6ABBD4E80EA0977A3C6BC97BE8727C29983C51FE219D86995F15BDF423C816C1D78B722415C9C98CEBB5E7AEFD6E4F63E78AE110078D51E6563D8440D5BA69BB6CB3B02F2B3CAB3838CF3D75D05F8D238956271955D6C818CDED4D9F1A502166365E53D06D2E136193F9A6DE6BBDB7276760F37F4CED49C6BD6766DC076238F168828FAC0C9D6A26411BCA38EBD22BF2FD6F35BE4E0C215EF1AB91B70A02D840BED2F82F4FE3E8BAFAA8337477F9993DC96C373C834E84851F25EF9421EF67F89BF14806EFFBB1974D4AC46A772424FB84CD96BF6C22978B149A7E4FDD19530C2C69030F12AB2DEDAADD75FBFA22306670AF7D0AFE101AA9E105AC3A24546C86F5CCC157D03B8D355157D2E5A65BA56352635027727B7CC3190D8007E605C1DC7EF1BF45919808E8494AC4FE27F9222C1946FAB133F027800387BB59929CA1E7F07C713E0ED81037782757C4C30280052FC14F017B4FADDB4EE00CBDA5B19846D4507CBEDAD853B147796165376DB9A45D941673597E46A47BFAE1157FDD92B167DB8422CF81F5B4C80EE86C9B4C4CFA4BB1DEA5A877CCC6254511BED975701FD44981108C5E85464C559E3F31B1CADA606697CAF577A664FA0309F22631168791B62DE46A1F4D9656513D43B7F8333EE4182B6324F48FDD7AE484CB8DFED7239397FDCC274799D64CE578AEB7944DDFE92DCFDA12B224B6F8949DE5756965055CA04733F158CCD65D3B039CDD3A0BE703CD0ADBD32780919FB8F14E1EC086DCB5AC522BF2A5890F3211EC55F6E98680ED2CA598C8BCFEB6589CB2F0B6DC103253BAB47C2290575EA7C9335B6EAD11533612D7F792D6472CA76886046B5F9D803C99BB0F43ABF87C20D72083ED51C7E37134E57A21D6E722BB804115EF64928D9CF4AD85B58C2F15AA5ADF43EBF4ABF6568AE3B90D14F4C56B9E1366320AED06E0968E4BAFD71725BFF2763DD892C2D04FB3945500787285160B3DDB539B6FD7C79C5CE4BAC264EFB27EB8F291DBBED98FF7CFB94B19EC40789DEAC2BF3A46F844185340D8C4175E5F4E94040517A982DFD6835829C22D004E67FE6F553316A7BCE2B4E832626F9C888918F90AA6F4B7185785F39FB73EAE2EA21AF0398A1B9697B39EB3CEC2CB5A79494277A594499EBF7926535CD02AFF7BA5E9A74BBF2BCA30F09EE6E81EA7D294E3D57F5522946117858F8A8FF1E6028FD7C1E11E88E384AF45FA1D76869ADAC6DF2745B2693FA489AEFEBE20FD84CD85474F91E5A27F37071D721D78C563BF831060C5467AC1DCB4F2630A55047F104B93B43D09D10C417AF88CD4262F41E5F4DB1965284660E2AB845BC1575817DCE5BDA73852F6C15A1AF380EC6A328FDD261EE936BEF552C497DB25BCC39EEDB21380320967E5815CA46F787BF9AA8D19760E691FE1EF13E505D1B47DFCAD2284ED0C412DCFC3963781410DA3B2DEE505206CFE9A5765E292AB383B6C33505D09B967DBB5851D1C0529B771A52D13EEDC65FD145EEED5E268722BD7CFB06E3504DF1B39A146F3E24DBBAAF1710CF93CAC6DA15240ED4480FD6A8D929EE75C374D08046DEE4B79A5AB10FFFF18FE23F2CD70DDE28FEEB8C9D31A7742D114747308F7F8AC05705F3D008AA816DB93ADAB40FA1B233B42550634A3A2A34848CC7B7EE2B0585AC4E8107DDB362F396D6D7630B5CC55B087DF4A535656D46DEB2E715C9ED22A41A329EDE60580C060FA680F50F07A4894352331E57C18F945420B456DD4E592E6207BDFB5EE52657D4D41F8A06112ABE246F44924A5CAB868BC91A18393BAA6BE6298A86D821E16619760C8BDEFDE0746BC6C08E970096810701DA7EBC06C8E160663D669920E4DDE1D59E0B6388B5F5334BBE9DD441505B9E77B85CB7AC4B967D3BBAC3576D2C13242044D954E7D617232F8B1173F2AD5FB26C8040ABA4438F0AC6F83A0FC5F8F18925E8BCB35CB10760A560E22011153408F1E949FB201907B77FFD175A868F0285A6F90B0F6DDF88CD1EAC4D42A0D2C7462F97EE9AD2156E1F443E8640BC40657EE4F5D058DB33CE31710C62BFDB825CC558A73DDC8232653D9B9367B4A9126339EFDB2840296E7DEC1EF6779D035899C40AF46AF40AEF7DCC008DF33D4458D0B23241BB9337746E0AFD6FD302AEA1BBB6F69B3C01D777A61A9066F5A9F9EA5E0691C9997C9DB935FD7E3C26BE41A6D8A9737767C9AB7828172EB87CD9543A2629AC082356F907CA6708A8F311E2A190B7D0A264022CD479B4444384CA28EC9D081969A2514B6F4264DE45D0B4B2337ABD745C045B6C57E06D3DD64A23E17DF242171BFDF7EEC7FEE330987C7B638CA8F2B52AEC24469278764F079A03911E3C20E179119A8C329C8BF2C6EC869F9AAC7421AF89477B3492E50F42DD646E5F343200B7C41B28807BC635BF3958C156D9054100D978304AEF96F42C3BE36D822EBDE6B373661C00E964AB871A938CDE6FF729E71487FD13911CE9BD5800FA180F7B1AB2FE5D450BE420CE7D2A6E9684C02904FD6F77FB7D04EBB2A7FB4F88A04E70044F964D0225CABCF787FF0A07282F37A08204B8E0F1160F49F580ED360C8FC23824494ED47B48D6A7CD8275BCC045BA1DA5619A3EE009796AF0C7C1E9135008FD1D31813F0E9FE1ADA9728F31D5AE61A26916BE3DCA261D6564548DBFA17C4F314E89D39E19A4CF2FA962993C51CACB7F8F9C3FEA6440336586FE920D28CDDBD9D8E8BE260690D61863858B429A99CDE0C677EB1D82886C9C14E61C29B0C3F02B5F95406790451075AF42479A8B52F856D6D9DA9FAE272FEE8312B026129778472C50EC9C08504AF6D64302E4FB670D2A7ADB92CA9BFE6EA6AA13F537CB92A3E20951EEB9458E2332F1AF63E39D80693A06131936E41A9DED15CBC3C286C5F4C00556DD88420DE7EF06B62C069D22408A09DE4AAF75E03F09E5B9E0D1F0C43C005BC8259125B00CA7B611B4CF75178B1D6B48B154CD1D53D5F7B5997DB65D350A329537121E4E70365B6604D21F89706943E6E57A213B74CAB7899C8E8919998EAF5D76E3B3F4B62862B3F724D13C33D418316961D878CD36FCF4CBC94548B09ED3BAC068D5B43E1354F74F5A08F88E3103FBCFA8D0EBE6FE99648F48B089FEA2B6C514CC43C9ED42BA61C74235971D712DEA6FF25B0F80E4A7FB4AF7602F986371831DEEC9952332C01B0D1F926969AAB3275B19DAD3D6D775C0598A8571887F3F59032CB83AB2DE907BBBC9926E08BFEFD826D1B443B257D7AF80B0615C2B2BD4F060076CCAFE1CE58992EEBA6EF36252DC8C7A2142327241C1574A5BC5C38827D74C3327DFCB66254A4E490FCEE71A1D06E716A0D84B5E3B90F41ED83F7540BA1AA31DC1B9CEB5E332691F4BE5D94A94A8999D1FDCC79555616FAAAF93B782C4E3F64D20E19048BA1C0023B96CE02460F36C460A6ECD5F01CD9F54F3DDFD982511DEE59F977CAA07029FA21B5B3BBE939618440C6EC5DB8F73DBA7A5438643E1DD740E4BEE883485CCAF5AD20DC265806C562CCAB48108586EEF3725C692645B92712E76821F08B99E95F6F6FBFF94EA24BF6E2A4240AF868AB59A5F5D1F2106318B908A735188CD962CCD7DDAC2EF3FA03346AD43C744D2285C297B867ED07463F3988BD0C0C61095F85F4A8DE15D120372BD3B4BF49A1229A9834A235E6F4A94B64C4EBEB7932A32C3D3DFF1864FC441529D5D9CEE0D00609105D2BBFB95E009C8683AED0829A7CE90A0F9259558B76AD05FEBE61A5A184B5A0C735AC8480ABD21B2DC89A9A60BEDF3F3D2C28C4698E0E22BE14B187903749B9EE40DBFB368AAA6F31AF04654BCF369B90204B3011AF44B1D004D5B6B64186CD7D815DC5163E1B7E011C4C8EB04B55B6E1F4C344D6208162830D095731ADBD742AFE9C7733F18F182FBAF1139B89B5E123FD3C0C96CFE4C23EC11F821A695AABACA161C954F7B4D6A241D2DF3655CF1F237217AB710F16A81A5291C729BCCE6667BFC46906243075D3D1D2A9450BA2ADC34AB97D1F243530A08ECDD844BA6FA9A31627A1B603EB8913AAC1B34289664E041BED3FB78E9F0E39842E05CEA6ECB462A9F06F1F38EAABD92BA80687295BC8E8E82BB32E4A3A8C5EED443DBFABD213EE00730BEED473EFCF282B83B7B3AA1034A701A8F190B18EE7F4B16466CB2DC483ACFAAE88F2DFF9FAD4AF423E9025234A4002E41B4F602C07D9DEFAEA14F7FCA06F3FC3BD7A18C4FC2E19A1985EC2EC7BB677D5B0D1EC6D4E705D92A2DBD086F8CB368166CB66583C6B08EF5BFDE8AE70F6435518BA5C1F671454BA4773E244180009A1FDCDAFB4391BFCF17B4A3599AEB4238AC5D97D18D3C1BF279F5463A38FD9B50A113FB12D82512EC461E1F3CD6B36932688B246239FCE08F9B9B743DC51336D27BE06A6EEB4518CB36421F552E5881129C19E0B0A0F4F0855DD3085D13FD635C9DCB2338AC2113D54FE6685EA09F62864E86538B0F738960DD19EC8F27E97093B74F5C6D7C9A1EC20D13641177808969ADF9F6118FF0597377BA40D9254F636B835339C1B4C49903353C33F6F1046B1B31A5501C9268042F6C07AD596FA0719082658DB5797CF0DD865F16BC22BEB34FBB892E58BA351425EF0506999477E799E1FF092C35E8D85D376C6ED9ED5B3B1D029A95B3AD4D1DC3CC9C10BAA39ACC29A45C54A40837E93DE038D39215973D6CB0222E8DB3051514B00B754DAA1516160D356F8C6FE14B75CEE6EE86880FE7890EE4E50296485A3691CD48FD152D0C886259DFD3D9AE25A081A02C3D1005A75EE7F62E80FC9D23C986B790126A8D48E393527DEBF670D530513F22B0A116B13EE0C4A790D1284761084041E0EEDCBDDB5D1916FB830733AE7D3DA14BDCE6C5A1A8E34FEA57963621E08234A0A865B54F8512E911ED632F27AFF55A65E109C8683AED0829B803B2D7CF0FF8AA1EB37A4C091A86D51EC9DB83592EE98CDB9B2299ED750360F682B57901352C4C064343376A8FA37A5640C6BFDA498BB4590BA7CA5558FD8CD47A269C4DD6A9FBFBEBE8CA425C047B2D2AC76102D10FB06E75A2A8302083A3B36580DE35BC4076EB87E3BFF90DF045CD317EF1C29C1D950DE1E78ABCDEB7564304B2DF8EC0AE280C99B7E0CE73D33803FC9CF167426C6FE9A083194E984E677425DE0448815B56B222E0512A0FEAD20BE4E414D56A4E34EFDEFCB144314219487D8A40681D330610C69AD1E776B2F49CA78170D3D48EFD3BED6240792E1A6B0E9BD58FD3F39FBC2A664F03DB42FD1F42C095C4DCF2C21BBE09331DE5A687E9BF2BEC855D2935EB9502DDAD48C6E25D164687B1FC7AEEA310DC78223D2F0C4BF9C9C738EC066AE32DA2152A05DAD35E0AEEE4D5A9DCD1EEF467104CEB263BB618A0CE2227DA29C3D97999D2674CEEAF701C2050CFF7C6C7B4F001E8C753B90CE3235F395D2749B9ED8D0B133CC189AC13FCA940B5AD4779BDAC0FEAEB756FA073ECDB470F763C4BC98B27FA680A976EA932B7DBB6B39CD28DC0742D7E9BCEF3A6526C22D237634A7268B6005608719B91D9003A41D7A481BEE98EE0CB318CF7F071397020AA65A6D9715EFAB5977057D4F56F86766FDC3516D5C7C186093C6BF7BF7CFA1950A3DE2BA76A747070A2E935FC8199B0F9F0611CAC59F50F3AB67BAA6A3FB16AA8B0E6841C6B1EF203EF2F4AC355C5AB551B46D98658892A06208786AD59C386A460412EEBB9D1999F4928D338B775258FF0DEE95CE36531C775D982DB0547FA622558262123D368AA70D2DD65CD5368C6339FC5B5F7C3BA32B38C0023ECE3CE5A2D74FA13D294F81CB8EDB81D107B2434ACD50A5B9930A296697D31BE6D0EC2D00CB683BAAFC823E00B3C21E4C7EDC8119C1D7AC38032AEE766D16F34D07C52230F0103C5C50C9283BA54A2CA80A3C38BE74223FAA581D7D6206AC260AA4500026248A2DA8718C0B7D54D29924B7E66EAB4EB7C13FECBC8EFB5EDE57474BE76B78C14CC8A09218AAD35F0D4F54BE54340971903AEE225A513BCB166F13781AA9F40C044E1F98F1B8C44AA3EA58FDE60854652601F66DCE3DB8BC7A406484A9F93AA3218C9DB04C2B314B0371B9013097F57EF6D8B61F2BAF21D05272E429922A6B1F35EBE4D23985C89E8EB08A48BBA6B0C9E3D056D8AE28C5BBD062E504D6256833C98BD61A195DFFDA0F73C7E9F7334AEB7C3523B1A364F0FD1937E7DC6ECEEBF51BC239DCF834EAF98A32830CF2120635B409197432D70FAC6F9B6BB545352CF4FE373260AA09829841B1B341C84146DBA2466BC193500ABCA0406CEF1DC9DEAB8007B3A8356765BED95707E8D5710B3CFC0227DF453E967FE8ACDD4D939B1F1617A82CE797739C4B22C593311089794B6F5103DD4CEFA70CAD3A2F9B5C5641B2E3F25DA04FB39E0758265BAB7FA657B74775E43B7CD60DF398C8624515FDF06E4AEE7B87ED837E293F802B5FB76852CD040D0A6D8E9954F849A24B170590276E7B5B7214DE6DA9D2078910747C52036E93B7BB111651E2EED59E319EC54D44CC0CF6A14760953DF4AD0E1F33A54D240E236AB63B376F7EA7C8EF13F2E2217B784D2814520FC0F971772FD25E6B31D9CAEE3B242EDB92F2C0D1B10253D2CD2404B43A14C56D7DCE07DC72442BD52BBB779E6EF6ADB9000976A43A5142A594EE971DFED27FA4DD0CDA01D17892B6535C5EEDC6659AF4259F93F35578751420BE040AD837AC6F053C69F6C60D3DB6A94683EED7918AECE0EC9A6199C494F9A88615B4BC36D96F815960609E723A6EE4ED849AEDBFF3255B40D517FF38274F9503349D2EE6A82C3EFBEC71241146892398BD03C2DA5FED3D183EE39D986D5018591E1A2885C5E4231E8A3E64F7E1A29B1E4D6EBC4D717C8927C92789BD12C1D9671762E4089AD086B3F588AB0472C405BB97E184074BEB258F8F75481A87B611849A973440B243185A7B757DD48924999EDCED34D0C4089DAB9A9797A16EDFB7AFE09E17E2297ECA2C92CAE7E7BE55B85CD0E4BAAFE313086AFCC18D0CE8B20E8742105C3F5D185898826764D4F5490AF0C9710B6C49EF54A15CF6F73AD7E2E10C4D968B943E8215D5E4AC35B18B196ACAB89F4933339ABBE55AD98853306C646C57C838222AD4359AC7EE707898FBC052578E1997D310DC4B292C98E35C557F7D0ECB794D8D9AF0ABFE8259E9D80346C7AB695878B61C5DD5309A634D4B4CBBA8B75FF530AD015BE7C524AF41A889691BC2A68C0C0CB34CCFF70A7A745F72F026C5EBE472454E9629B64BED7524201E84EF4136D1736DF920F5E560306C800C56CFFEC744F814E1E606258B8C9934AF1BBE5A7699DE152863BE7684397667805461A160C3A16200F71502BCC483EB20DE8538EBED6E469CC5E987B77B87D71E9F1FF64C7C45D129762EB0F4A2C2F102C70BEACD1CAC65AE2ABC6DC53F22DCC60A71BF75FAD5F8756CF47F93995BE5837DADC6B96C78EE138EB20FB507FD7826F885DC58EE4E585A7283A4D5245F8ED03F1EF81DFFD8A3B9EECCC15DB47426C01F2DA10E1EA85705179AF91FF87415CF0210E25019525E8FC837205863F6A4200E8C3270C83984CD6B1819389B4DE41E56C76BBCB40645E9C66D9FF757E3E6277FCF5E89A18CDF4D9A0D647AFBC1B5C58B463258D76A946820FA74A1DB3A2DDD0CB7A19FDB0AF066F3C7DF54E575BE71CCCCEC8A5CA3E521FCEFDD52BFA7BD2F6079FF23493D054459E838277A2C57572ED55BFC8F42A06CAEB7CF8233D43F0460986228006EF979B0565E070638068ECA8315278B0B4D1132623B5BD4ECBE94EB3430422F25DAAE117A3CE6882B400D58CFC32379D20AE49744786F838221CC3DE5341C78168A790E8A8404E024538F78E60B2CA05E01089F7767BD6220A1C15988847BCB5B01B04F5C3A740283ABD9C2B27049AA02B6836AC76C02EAEF80D5D6DB9B24997DFF77ED0BC68E77BBDEA0EF3F8576692FE1DD8CD3FD932FB9A6D232CF79D77D3E2CE658FA10295B5DF16E816217DB88D274C427D564DEB7B846C9BEE668BC5DC0F54CE3749D1235AC69E11E149C339F6604C5A93CA60A8C544869FB7FADEC8B9CC14DBFC96E06CABDDB9DC316144DED6E8EC6A58365DFAB15BA6C2775C569FCE4BED2A0C3A9A050C4BA82FFDEB0FC279FF422FCBF9EF2795C14AED58E27A1570F8D1C92FB4D285C794FE7A87681DE17628BDCA36A6AB83AFA10A3C202EA87380AF3F7B85B70936407A6B678FD310AE266FFF44AED70EA59FABA7031AFA711B5113521B15D7987B1137759B9BC468D9E6EDF818EC6E9420FAF06E7D8BFE27CBD334C45FF9CB50B3DCACC00D9D82AEC412D93DBFA9598C690FB32B1B1A5B2A6EE01B5A0A6F292DC7C485F33FED65A1EA6312D970981A2144E3FAF275AB33DD0F787F5B6C1D361278324234290489BD93A8E92D48D38509D00C690F7BEF7A3F9B206F0282FA4ACDA4442722A22C93DAB7DE2937D3885BB6B32CF62E1C29CA0865E5FB9E7057B0F099D3368235EB4B783A2EBCBEF85C8C7F4FEC79134F3EAB53AEC1A6A0F35990FA9AD8748EF4B9DD7193057E70EBF38D24B4AB1D4492EC7B202E4926EE439A5AF0DAC692631F1B4B870EB8E38C9CBCB7CA8A6157326E558499C0D7CC805E90772233B220056CFAAC2861D527434F83630DE8265BB6B2873A2A26F1892174D9A4C44A5BA032F1C64FA433CBC8805A70879A6B6537767150D5464A8D899023A966CA743F1F2CAC8CDB1BABA92F2885984B7293D002C7F7513CF727C61124466F2262E83DC3664E0D75673CB257C75401DF7A663F057C9FE6DE5304D99F1DD3B3387C5E13CCF5718B08E9C100B7FF1073D3F82ECE6518883A04A7EBD1CE84CBCF5236CD6F20ABF5EBA340577A689B3BDE5663176114C36326503D3E9623A333DD6D14BED92260D9DA0BFC2605E20DD9B9D5CD3A8BB89C7BD0B6B02A8C98119A6FA265C6D18CBD8AE077B545283D99648B927DFE90BA92E4767CFC591A8252FD72789EBA34CC601F863BDCFC023EA47D6E04AACCA77494B9E6E500365368C08217E5E94E0B7A00C4FC1CC14C7C09B327869035476353823C7F1996773D5847560A2B9C92AB16CFFA3F66FAFB5094ED905BF94E8BD290676A2CECC7272E44BD42EB1D2D1F5242B284C3235AC828F8E78A1E7EB1B4EE55446BF4E6CC6B7DCDA3D7FD3246EE538484CC1D5D70EB4B12765E6DF19160D8769AB6D0F3355A74AC1E992D1051E4E47F5E066BE6CABE001D5A26A64FE348622CECF92AB739ECDB9188CDCAFAB98658DF4C72225F11A75556CD9617D5CFECDAC7A3A74D5FB00297691A033E4B4182259DD734570830D5C203B4669C182CD6745BDCDF88085350E11F5EC5179F6A9985FA716C85080499F386398487E70F6B5848E17826FDCE157DB33A96107C2D3CF8984C70FAD712F9F51C89255417474343F630AF2A46FAA5BD4256B7E56091E3081AAA1819A022755052B50D3A9DCF54BEC543CB1F69CA4DB298386FDD3383F4981BB1461420F547404A81374D87E03313610801F15FC459D97A7105CF629D1B7370F75AE8C56D14E66F0A692C8B0548B4F23ABFEBB578400F9678965D15544D252BD9A18830C76EFB794C341C83884438EE06041F7ED3009BABB83548906B09DCC174DB7B9BABEB6686A1558D5D18D3613E37801EE2852D748801E821E665D1EBCAF2A9B851D00165C23B3EECD2DA4C6431471F37B1B7283FCD6DA968F8AF124A3E60C3EAD6AAF544E6A5A623AAC35969666586C345714E128C1C6C0BB990FBE9D91CE3D52B5DC7874ECA78ECAC0356794723F2C4748250BF0FB18FC28CEE65DA54EB70902E6F8C393D3E0C35C362F5F76233DAB53E0E422CF5502196FF8D9270B370CF7B324656BBBEC0C9C96CEB6C428FB4C0D514B2C4FC419397DA30EB9E58BAF56EFF28485A270CA2097233FEB220A88013D075D17B473C0F64E8BD2E4A16523198B2608FFB717C7F6952CD842A4F59DE614C4084A923679F363D9EC46560CA57FF5BEFBE54BBC1779A8585039139EE4BB8F2F0B2CF7E33828A4CE4E71F5FF575456F2196857D364B8A5444503A563F06AE3380167715ECF4135EDFD68570047470B861907DDBBA6473D1B8C6F309186B2335288CE0598835B6B6BFD512AFFE569AACF46996702917213C65E3960BA1A1419BD11EE5B5EF4A0C3581307C9038ED92AEC781F9D1E43D42CAB68AA1B77B5D5B537BD2FF89884947F2BA16C98897E6EAB4033DBFC30C6B109EE259627C360D9B5B48B90B98E8CCAAE241E3052E84E0C6838C3DA8336CD39594CDE8DB8724D14D4DA2A3EB2BD0CE07C5A6D380642E5B5708FAD2B9137F8F8E6436C2CC4C4F9F8B1E1DA2C48D0C2C246A60830C9C8A74094BC05ED59B7D8542A64B32EAC78E9EC2708626E0368882463C3426352743EF3D834136D63DA27F53FD0997921D33E61CA851C4A5BAE1F89C1E0CD78EB388FA2BF86D114C7E2187950EF2B4CA82557F2CD0D2F63FC91ED930F5681D9A9A600F1CC9B82B395BDC61B94D03E4AC819EE0333F46D3FDB7AF99078DA7524B9AFC1293E9BBCDEF70D0C92B8A10D51799A2E3753428A288AF248B83EE0D0FE191B5F678D47EC1228F85FAF5FB27DA35326EB0547567C4C64D663FA26C0C43DEB29475AA23720DB8505EF4A383132BB014C1532DE7B779D2504C30B13038839CC756617B14B71BA147E34C348A15A3AA13326EACEBB4ED50A94B1DAC353C9297573897B86890BDEC1FD6FD7284CBA8959D8C24C70A6239AB47BA24DF39D062DD1A47ABAF0FD26A6A986E547C5BD7063C88B0704F30B69609C9FB9B2E8D249B9814A4F0092FEA93B9157519483ECF67CA034D4B00612D9FFD9FD324767CDC41F09FE1826A55936347DDB3F3AAB79DE04D5E3E9E296278CD5769EB8279F143ABEFEA1E08A13B6BA845E0AEDDD667DD309C77F29AE67FB03798680EFCC66F0CB549DCB4C0B71FD9CFCD007681A738EC1A2C4716083F3820709F8C62D26AC6D4E764D896663383420645157877F24D94505BB35D307F33279D2B9606E8E074B674AAA7A28B451086C0B305B0120E40B2822AFD83EEA4FC2A74BB7F6DE2E9AEB8F50266EF51530CD21DF8A629E6A6292A11440F024431328D16CCEE528697CD2714534BE51AC8AA7C8A6E247CC1AA1BE1DC43E4713CFE455E0A6FBD4AD671A9813592A448932945292A2A6AE851CFC2056F14F9A8554D2A0D48865F8B8078658566C1487E6BDCEA352F70DEBC0601DFC2DD3A7F2F068FEE87CA3BC8FC2C6DBFC9E616AA848B1AECC6D026CBF3149E9E3360EC5DABAC2BDFB9956890F1D97777677B607648A25045052B15E5CC853D8F20498353380B6960083DCC90693CD229EA78985D09E7B63CE35ECDC454411C1C7C46F325172A8B3E6C71698B5B45B410F69FDCF97C631BA1A33C737323C0AEC350846EFDDE0A844D6B3C05283C684C1CAB503906449556CCD584E552EB9BDC70D8426D2F07E96F05DE64F1BD27AB41D9B09EF3F5B3DE084F9E6801738C9F6065D8F69230C45CF05731FF7E0F4C5C5FA015A94EF09DDA527B1585C6748BE80D7DEB239DCBCE39DA170E458E87A58B4A513934BEFEA4B18EB9E72218EE8C2B4530F216B34674F3F5984D21A49FEA2C55A050C1056819D482D7273A3FE2879C9A85DE8D6DCBA8114AC6655DE6C864847B092B65DC6E4955EC3846CA72C90C660CAAA3DD6F0B6594F1F82484D7F06B44EE41C09D0E94B692364F01DBE4B32BECCB36C819ADC81298035B3A16E7D54795187BE05B7DF3E537EB6EDED964F3E5E250538C9895233A48E2CC43979BE7D5E4B896D55B6783FF305688EE17C4360FFA4B4F45356A45CD4B37D912529BA968AEF58246BC2948A1F488479824CA75ECD4773AE364263E176B84397567A5AE868342493007B6519022B890B05B811B21C2B4665F12D268CD7DEBC9C0054A4138CFA68231EC1EA864F97ECC47A601DC3B00C90F154128C53D3218FE98F6FD0297C857A51A8D59DE97788133BD9ECF571AF69FEFB464EEF66B3CF5A289A284D3BB9691D2E644DD50F59FBC019D9F59500D60DC44D2F2A67997F61330757363EDEE7C46E21C4470C197ABB628939597BD1909CB8CA0FB0F4916352025EF81E7F08420895A2A32DEF2F40CB5EB44C486BADF4DC9F2605D97A1E008DA7C7DECA218BDFFFC50E63B1461A05CBF9C7015F0E1661858CDA0F49BFD8A8629DA1E9E0CFC3F82BB93046EB0BF16AC1B1E72EDD93D725DB1C0482223FF1AE63DCEB8DC36446FB2CDB28F22C9AEA5E0D50FD60C6E98711B95A423C537201E1DD327A5DEA6EDCC3C8D2CE0F19BA393CCFF4F798D9C591B67A5B82D820312FFD28500C5427F579ABCB5CE6612356FA884ABFB7E044B9F22FD90B202482D103C4FC5FEF02DA7068447C195200EF82F56F2F5A18FB514FFA87D9C5AE5A547A5C29288C62860B18B6B47B745E74C5B54195CA2939A516BB1D6CEE41E4E088CF6C718C246E9B86E1D1C81D775A318DB6C85BEA5248C42ADEC9861033EFA992589D421407D2451147941474F802C2B6275FFA0E409B062700479712E2A5A618F7352239522382E291F3C72298E5EA4C92E57934A3F5F569EE8BAA6F139F44890182F609D23C5A168BAA6B91BCE9C270AFE516B7CA7F61CD34E4BB0BEBFC75694ACB704AD7A2DC9A41B0DA03CB2B2712A7EB44522EB94BCD2F3A1197DE020BF4D3C342F173AC1563A7B1AFFED5923FF1BAF467D8C08B385284D80CEB497AFF7E8148B8CBC90CE7FCCBB51E3D3C7377063B7B6CCC67298CFCF92C485EA368CC8EC0C00C17EE77F54FED5D037423B70536987D10FC3111BE7D673EDC069AA0032EABF64B42044EF5E9E9E84F79DD78B63C1478C0B5964E8C5787F9D325E97BB19CBED1C315122DDAD27E51F9097B3D7020953723DBF3264213F2B89640610167C76134FB7B06D1C1D4C87965607EB736F75668AFEE8958A139CDC18388B203169C2A302F66C9103F8DC6EC9323B95C7FA73E2BB7028ABCB3AB02764735B721450C04E4AFA9F08F9357692DA3F04D03849E3C20199F9B7AD7BB9EAE47A25651B55FBB4D6DFDCA9404F4F9222A634046EA6C46025DD63BF3C1ED22AE8A0AE24A217F855E867EA00D4E0B2B8EC5403A96E3FAA2A7434D5594796765CBD5EBF9F127A5C450E122EB3FAED4C321B15E270C73B911E0BEE45EF2438D5C150D15ECBE2E7A6C42475BB97BECA1E6A76EE5281CC7A92D1AFA0CC580D2E87DE925A78AEC6BEFD1446F05BFC0AFB977C305DCD9FD7A14509874D5A13A5294A43A5F8B79A8F4C8D87080A9FEE5B89016461F55C61F1E4DE1E2DF0328C785CC4DB181CA1447B99643945CA2BB596194B61B7AF92D786F6A5B4B65C429F39CCD84646586F91394982CB951665CC69222CDF48CA8EF4A77B6D6EFF9D8C67519AE20B8A603D998C03F3B9EB210786997A47E54D5E23270A336CF9C98C22B35210F6A5F4527B6C872D30165982BAFA33F4736B8428C82FDC4D0CECB417F1B64097DB0A40004BB77EE256CCFD620D50FE1CADE8C0DE9297D6B5A4E66D53588915F915E4DC138CD50184229C64A738BB512D84D5CEC76AA8B87E9513B519F9982D4C32ED1ACE9C30DABD5A3D418260F6BB2B99163CE7D77385B067A386DB5D04AE06CD58BA5180A8C2C3D646797C3AE09EC57FCD181C953E2846D7B09D330AC810803208E13441F27D18C5A12B4BF1AE7EF278221F64AD557C196DF76DA09965B2E439CCA604AE916335D824622314EA1AF4ABBBAD60905576EAFC59FF72C89316F524690B6C072B60DE0D6FE60F2C6B82CE9CDDEB50A8CB2036D3705E771E937905D453F70325F58592C4A1DA4D60DBCB1FD45BAA7BD884D1BBBB69DD0E5BCDA8CD8DEC69426C4392705F12772E2390980194049B2BBC08D53591D3699AE40245A7CB1B4D104AAA877FA2C02373DA0DA4486F528C084AD2C5D71AE1DC87709FE90ED4788177DE86A57BA4220901B5D96BB91477249D08F7EC10263DBF5054C4AA6B3FDBEC5828A0A48F7168823362385744254D2BADCBD04EF745DEF31F36FF2593239E7E516C2CC1D50A5DFCD2429830F5D4A0F4FACAB29A390DE452FFFA1BA2D7A920FEB9AAEA0ED2F85954458A5386D3F711737A908D7BE1BD3D368B33C2B79CD050513FA4EB9110D3C3C0309FAB4E62AA6D5C258010903ABF6E93CC4222CB3A0A4EF038B3B7D7398761533BF090F2E9DD8D8E3A948DDFB6CA5EC253C54ECB2CA9B4955F4077607E9397C67F8B73D30B583487CFC267D41C1EBAD269861C4DDDF41ECD8FA6935F9367375F92D3B0596C39634B3207FB153F72589781CA4AF42636194B848031DEB42D6E1B7E745F5164A3ED1BDDDF382A896133FA32E69B31446CDDFA0FAB948B8627350971B0FBA37250B544A4CC9D5CB9769A111F750C918D5286DD6A45B09CE91AAAB0102908B8FFF6C046890C5C930161A688C88061A11F2476BEE7C1BE8CF44ADA37F52E5CA60D5643EF7008834F812A4D2504ACA4B4B5FD11BE210F3716C1DBD2C5AD2C505569649E48D50DEFFFD93888E9519A5898A31DA1731C235AEFC29530FBE461E335AEB578FFE87A9F3EF29C35908C57D448C5EF0E0B953B8CE52C94F064B8B69CCA4F5D6D3FECFC4C378D2592294B91A35D72DB3740FAD021238B6CCEB3A029D89853BF58FE67EBF47C6AC081F93B2D9F0DB91E6A5A9769139E105457AA4CA60A5E14855CFD4E945F4DDE1E5FE22C6C13160DA6DD77445063908562A4487F24C59ED11E972A1EBEBDCBF4E8FE3213E697E2D742DABCD82A7824E3706081DDB20BD09A670D40F63EEF3C0ED308210E928EEA83B66CA1C1A19F2A10857F1B40EE2AF89586DB1F030B1C6BC15FA293219BF36FDCF4561B6C2F81050E4784E48C3BD4F6E9903BAC129101E7F6B5AF5C2E87496957DE7202BB62062C07B16BC73E0F31EA5817F90E8624E02E0EBD3447D36E0DA51E215789DE904102F92C9BCFA45EF81D00D7B65817DD79E679FCE6DB7BD46766C6EFE0562B45A17BB031B9E164B4BD6277000F6D505C91E0039BB123A77228713247932D40AE28C3108C381A6C3A4A31D88DEAA7D944FE0D0FC5CA269A8CB1DA52753D0F09237D31FF44EF23AB4B33DDD3F2C35544B459A020058CE7E27B90AADFA7C93B384C0AEDE040ABE65CDE1D679BD68394BC29F1669A2CFB1CECAD240B858243CEA62B7FFA610FE8CC973B7FC800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/Inconsolata cguidfix
/F1.1/Inconsolata renmfont
%RBIBeginFontSubset: Thonburi
%!FontType1-1.0: Thonburi 1.0000.1.0000
14 dict begin/FontName /Thonburi def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /parenleft put
dup 34 /a put
dup 35 /parenright put
dup 36 /b put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2560 -1531 1 index div -1463 2 index div 3957 3 index div 3585 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/a 3 def
/b 4 def
/luthai_saraaathai 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.000390625 0 0 0.000390625 0 0 ] def
/FontBBox{-1531 -1463 3957 3585}def
/UniqueID 4158355 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C96AC05D8620AE2086072F250ADD3256490B02A185DDD3083C39A0A37A468857C7C69884DA97554B3A1C586F7E7A82929DF644A9A13AED72B4B46B51F31628E4B0D6806E14F7E7DC5F358C142423A3FDA99174B14C11A1A6641D75BB85E41F211CC2CB5EE023F8094D960765CC2F79590965F681F6FB07EE939DAFD7844A566FBD68D34A8384A3B28002EA65C2AE45BC3D260D2FFD52249E3D0876B530F4457AE7891E8D2C31784742263171D351C4D272B32E247A837C1609969E25A7F9F6C651D0EC5E7C616757C9B5111927B371E19A961BA7EB092F35B5B4E6CF7D8C0750C0D91FBB51C021CAD8389EA9557EDFB68DA0B86D85BF4D1A37F64611233C9AF2DCE7F916D55A8EE60653F7A3D9F38E87E3B3843205F6C122D0EA03BEE4DF2415B550C267614FCC36DD0BF47C58E2BD1B6AE75BF2ADF9568A4DC9442DF1B018F26304F784D1652F2B1F20FCDB9C8FFF2A207476ABCF581104E796DBCC222E489C3943FE2C686ABC896D6B416AECED63607CF4F9A738749C645808A68EE9214B7ACD3EE58D081622070CEB6487D2AA4F1E71453DF466EC56FB3AEBEB052090020BAF370226A609BEAC13ECC95FACDBA82F85FB9B6FA12788BAED39ECB53290C042D4BE98ED487349F657B27DFD4C46C105076CB4A56853D3FFCD4448C129EEAAD6079519FA49E663C4C82E5D50E168F0259688DE33B525B92731DFB997F04CF0154362C3B755BD002CF1EA473A303C03108C674E33929F3EECD7B3EC04BAACF1FCF6A
D8A4C531A8998A899337C6F8A07FA2E8A3384BF1DCA7FD780D98CD0C5C18DD2406BA6A11AB24EB314A0BF9B6DABD0A6DD68CBF03982F850B134C220146A4D76F4591DE121E60C17E9EEF534CB000CA48E8176890B222C3590C53B833A2A5D7EDA5277336D462815526F787A15A0DD301CDDD662C50007489AFE2E917EEBED011AE1F5284BDFBE30E11CBEEBB8A8DE8265BDFA4D0C3AC4DF2A3E5BFC33D3C5392030B6D3EF4095B087048130D8D9DB8FC8CC878025538B103725121BCF421AEA59D459630DAF1BDFCAC2578B732D1D49A091AF3933B67BE20DB4EA92645C1109B7FBB65BF85EABBD86175F95FCBAC29C5296B88B5A2F10DA2F80417E9AB1572B6F0AD8F97B9D453169F56FCD615FE07F5CDBE5F56BE3107A65E911525DE84AE425E469A66842BC6C29F7EADD3EA2AC39A25F762F2E9987E54A2A4A63D7A0AD344B232513A025DF8A34933A1781F4535E137C261B16DD55AFBA1471164FE070B6826ABB66F825F563CA42BA81324F770C9AE67F471EA906F4E70217FF45B13CED55D79B2C63D8E548E592809E334C27B5ED3409002A2F3EE25C9C4C0C085C95C9796B4814314417548260FB23783BF0A0BA3D90017AE3403832D42C652616C3C90B5CA3489DB3DD0244FDD5369912BD1B3F4FEABD81837B1CD266D043DCC9AA2D0441739AF04081F40DF8D46AFA51F6F642A8702D8F5169AAD57392F83CA8BA5781E7D07AD4E7D204012078491B585C6AD3C058DA3EA7C1B2892BCCA6EAF188CD8A40686DE38882F0D96C296076BAEBB14986D8FD09CCD965BDA360F5720EFF89E8A39F53938D539F3B9CED9E2A7CD71723CA936CBD569CE62219FE53F42DD4CBE07973487B4E6635DB395B3C4E9B8F99BC73D5D67E0CF39C854F79569337F822A838DD50F3D349360A038C7DC4DB21E42A828C268B4196A22267D48141DB101B47411FA46DE5D1BEE847D297BF6DC748DE2A0C5E0EE54B059436C8DC819010362048C6F6400016CE210544053DE63D8124752D48674F669DEA2745FFD3A1B82429A181B4F84D7A478674DDE8B74B7EBB71DB60878B956E1F1120C693C239C49FC14D29AB07C1A23EC58C05178456746D02FE21A192A7FC8852724BF24EF9764F6B6F4DD76FD94ADDF8AF3EE3D2FB90DB5F197AB55BC1117E6441049F6153FF342C8CA357F129F9054B90884F67DC0E13057F7A4C48DE2F7F20BDB911C1DE497AC1C9D0363DF3CAFFB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Thonburi cguidfix
/F2.1/Thonburi renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /one put
dup 35 /three put
dup 36 /four put
dup 37 /seven put
dup 38 /six put
dup 39 /nine put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC00000844686561640000000000000D2000000036686865610000000000000D5800000024686D74780000000000000D7C000000246C6F63610000000000000DA0000000146D6178700000000000000DB400000020707265700000000000000DD40000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546



00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/three 3 def
/four 4 def
/six 5 def
/seven 6 def
/nine 7 def
/uni2B91 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C99D7B912F94734180BCB0A2B426ACDB993C61FD2485EFF51D552B7983EECF235595D121D981B45BAB07467F6AAD6DCA1D60414BC27687DB884E62C1AB889A60F265C3A94BE447536A1416F242F557FE1A5CAC5DFE0EA1BC8E60DC767A8895BC025017EB9604D5EFA6F3FA6E7E857B547E85A0B35EB6A79C19462E16AC05F263CA38BEA8EF850D76DFD1AB760C3C883E0CB5D0600AE0A42B3A0D23903A8492AFC0E4F0EA5010453684DCC6059E7B3963574BFDE0DDAFB1080DA27AAB99B46E6C86145929DD89CE7BF6FA3477B3811517EC4FDF5A658DCAE9D3770E0D94E544C70B03782911D286D135EA2BC6F6F63F328BE0A9ABD4FFB4117D8401EB2F1C253F7443FD6670E6918E01B9B164E1CEEF1815B9CF7F6C811628D695842232B3B25CE39EE1DD00255190F7FDC8F397BAB922BCEFBAF6716998E92134FDDACD99E1D11E4BE862A78E6488E010C77CD1BE65D126F4606C94477CE800CF6D09ECA829E8FD46DE86E5DCE9C5470ACE9AB2565BBC29E7FACEF674C13683AC11B4DDB3D3CEB5C0DB0426FF914A69B2AB8F5C9A25595C5E712D4DCDBF7604ED7ED38827D86FE75E320C9F3D6884632DB575E145567165465701A79757F85720B4A389368C36B6C773224CEE8ED673554C346719D9E8E53B9B93A42061185BBD3651A26C9B75403069F33E02B36615357CFF9A97676A0D6DDD45567D4D6CD9C43E3FED254948C6B58FB9484C4FE80D5F7AFAEC346838F579B6D0F205D100992800CDA265C52AB75

4A9288A8EB3DCEC86E4232EEE526680F7EEAA9C1A63C07BCF14C41EAA2C945C57C486CDC7255FD44BF95C4ACE564E338D5FE46F74F6E34A6D9763D08A4CF4C1AF87ED4F4BA0424511E3883E15BF4E5C13BF3FE8722EA5196AF14FF05605B223C7D0EF37BBDAA2433FF974B3C4B158A4FE1C65C2897A9AD82CFA8AF83CC400FF03F4C5B19A38558346ADF61C9BB423C51C96F82FC944109C8A02042F699EA714CEBDEFA1EE3C5AA8F69C1E7D9660F765A9173BB45F12563B738D81F23FD34E3FE7696707F4ED7E09A0A443C66FF03A1F699EA105207A06D7EFD0824FFC5851BDEEE69CBAC373EBBF03CC5FB0B00A86AE4D8E51BD8ABD354315E844C7E74F6A1FB91F2C5AAB8E636E4628FE7721A220CA1FA6B6E5A01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F3.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 0 0 sc
q
0 0 98.52507 64.125069 rc
0.1 0 0 -0.1 23.718786 38.847672 cm
/F1.1[ 26 0 0 -26 0 0]sf
-221.5 -212.72003 m
(!"#$%&$'$\(\)*+,-./01\),\)/0$2$3)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 -183.38004 m
(!4)[ 13.000000 0.000000 ] xS
-221.5 -154.04002 m
(!5#$$$67%89:'$+;./01-./01\),\)/0$2$3)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 -124.70003 m
(!<#$$$$$9=6>$./0+,-?#)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 -95.360016 m
(!@#$$$$$$$AA$B)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 -66.020012 m
(!C#$$$$$$$DE>=FG)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 -36.680008 m
(!H#$$$$$9=6>$./0+,-I#)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 -7.3400049 m
(!J#$$$$$$$AA$B)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 22 m
(!K#$$$$$$$DE>=FG)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 51.340004 m
("5#$$$L)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 80.680008 m
("<#$)[ 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 110.02001 m
("@#$L$>M6>$3)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 139.36002 m
("C#$$$AA$B)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 168.70003 m
("H#$L)[ 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 198.04002 m
("J#$)[ 13.000000 13.000000 13.000000 0.000000 ] xS
-221.5 227.38004 m
("K#$E>8NEO$*;+PQ,G)[ 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 13.000000 0.000000 ] xS
/Cs2 SC
0 sc
0.1 0 0 -0.1 23.718786 2.9909139 cm
/F2.1[ 20 0 0 -20 0 0]sf
-14.46875 7.8319702 m
(!"#)[ 8.937500 11.062500 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
70.763351 61.897282 m
72.068382 60.592266 72.068382 58.476414 70.763351 57.171394 c
69.458336 55.866371 67.342484 55.866371 66.037468 57.171394 c
64.732445 58.476414 64.732445 60.592266 66.037468 61.897282 c
67.342484 63.202309 69.458336 63.202309 70.763351 61.897282 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1217.5082 1803.1526 m
1230.5585 1816.2028 1230.5585 1837.3612 1217.5082 1850.4114 c
1204.458 1863.4617 1183.2994 1863.4617 1170.2493 1850.4114 c
1157.1991 1837.3612 1157.1991 1816.2028 1170.2493 1803.1526 c
1183.2994 1790.1023 1204.458 1790.1023 1217.5082 1803.1526 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 68.400414 59.53434 cm
/F3.1[ 16 0 0 -16 0 0]sf
-8.8959999 5.776001 m
(!")[ 8.896000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
68.230965 47.32951 m
69.535988 46.024494 69.535988 43.908642 68.230965 42.603622 c
66.925949 41.298599 64.810097 41.298599 63.505077 42.603622 c
62.20005 43.908642 62.20005 46.024494 63.505077 47.32951 c
64.810097 48.634537 66.925949 48.634537 68.230965 47.32951 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1192.1843 1948.8302 m
1205.2345 1961.8804 1205.2345 1983.0389 1192.1843 1996.0891 c
1179.134 2009.1394 1157.9756 2009.1394 1144.9254 1996.0891 c
1131.8751 1983.0389 1131.8751 1961.8804 1144.9254 1948.8302 c
1157.9756 1935.78 1179.134 1935.78 1192.1843 1948.8302 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 65.868019 44.966568 cm
-8.8959999 5.776001 m
(!#)[ 8.896000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
55.673439 38.635841 m
56.978466 37.330822 56.978466 35.214973 55.673439 33.909954 c
54.368423 32.604931 52.252571 32.604931 50.947552 33.909954 c
49.642529 35.214973 49.642529 37.330822 50.947552 38.635841 c
52.252571 39.940868 54.368423 39.940868 55.673439 38.635841 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1066.609 2035.767 m
1079.6593 2048.8171 1079.6593 2069.9756 1066.609 2083.0259 c
1053.5588 2096.0762 1032.4004 2096.0762 1019.3502 2083.0259 c
1006.2999 2069.9756 1006.2999 2048.8171 1019.3502 2035.767 c
1032.4004 2022.7167 1053.5588 2022.7167 1066.609 2035.767 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 53.310497 36.2729 cm
-8.8959999 5.776001 m
(!$)[ 8.896000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
82.64209 39.680126 m
83.947121 38.375107 83.947121 36.259258 82.64209 34.954239 c
81.337074 33.649212 79.221222 33.649212 77.916206 34.954239 c
76.611183 36.259258 76.611183 38.375107 77.916206 39.680126 c
79.221222 40.985153 81.337074 40.985153 82.64209 39.680126 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1336.2955 2025.3241 m
1349.3458 2038.3743 1349.3458 2059.5327 1336.2955 2072.583 c
1323.2454 2085.6333 1302.0869 2085.6333 1289.0366 2072.583 c
1275.9865 2059.5327 1275.9865 2038.3743 1289.0366 2025.3241 c
1302.0869 2012.2738 1323.2454 2012.2738 1336.2955 2025.3241 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 80.279152 37.317184 cm
-8.8959999 5.776001 m
(!%)[ 8.896000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
96.243896 46.363548 m
97.548927 45.058529 97.548927 42.94268 96.243896 41.637661 c
94.938881 40.332634 92.823029 40.332634 91.518013 41.637661 c
90.21299 42.94268 90.21299 45.058529 91.518013 46.363548 c
92.823029 47.668571 94.938881 47.668571 96.243896 46.363548 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1472.3136 1958.4899 m
1485.3639 1971.54 1485.3639 1992.6986 1472.3136 2005.7488 c
1459.2634 2018.799 1438.105 2018.799 1425.0548 2005.7488 c
1412.0045 1992.6986 1412.0045 1971.54 1425.0548 1958.4899 c
1438.105 1945.4396 1459.2634 1945.4396 1472.3136 1958.4899 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 93.880959 44.000603 cm
-8.8959999 5.776001 m
("&)[ 8.896000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
68.230965 25.112356 m
69.535988 23.807337 69.535988 21.691486 68.230965 20.386467 c
66.925949 19.081442 64.810097 19.081442 63.505077 20.386467 c
62.20005 21.691486 62.20005 23.807337 63.505077 25.112356 c
64.810097 26.417381 66.925949 26.417381 68.230965 25.112356 c
f
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1192.1843 2171.0017 m
1205.2345 2184.052 1205.2345 2205.2104 1192.1843 2218.2607 c
1179.134 2231.311 1157.9756 2231.311 1144.9254 2218.2607 c
1131.8751 2205.2104 1131.8751 2184.052 1144.9254 2171.0017 c
1157.9756 2157.9517 1179.134 2157.9517 1192.1843 2171.0017 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 65.868019 22.749411 cm
-8.8959999 5.776001 m
("#)[ 8.896000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1187.7655 1860.1467 m
1174.277 1933.765 l
S
0 i
CM
66.368149 48.442589 m
66.587784 48.809006 l
66.292694 48.863071 l
h
66.368149 48.442589 m
f
0 J
0 j
0.1 0 0 -0.1 -50.987465 242.21254 cm
1173.5562 1937.6995 m
1175.7524 1934.0353 l
1172.8016 1933.4946 l
h
1173.5562 1937.6995 m
S
1 J
1 j
0.60000002 i
1222.8425 1844.4453 m
1415.2571 1961.7876 l
S
0 i
CM
90.879745 45.825512 m
90.616341 46.161839 l
90.460144 45.905712 l
h
90.879745 45.825512 m
f
0 J
0 j
0.1 0 0 -0.1 -50.987465 242.21254 cm
1418.6721 1963.8702 m
1416.0381 1960.507 l
1414.4761 1963.0682 l
h
1418.6721 1963.8702 m
S
1 J
1 j
0.60000002 i
1140.5463 1991.5985 m
1074.7445 2036.5624 l
S
0 i
CM
56.156723 38.330627 m
56.571609 38.432453 l
56.402355 38.680149 l
h
56.156723 38.330627 m
f
0 J
0 j
0.1 0 0 -0.1 -50.987465 242.21254 cm
1071.4419 2038.8191 m
1075.5907 2037.8008 l
1073.8982 2035.3239 l
h
1071.4419 2038.8191 m
S
1 J
1 j
0.60000002 i
1198.4875 1988.4285 m
1277.9858 2030.8397 l
S
0 i
CM
77.16404 38.940281 m
76.881721 39.260902 l
76.740517 38.996216 l
h
77.16404 38.940281 m
f
0 J
0 j
0.1 0 0 -0.1 -50.987465 242.21254 cm
1281.515 2032.7225 m
1278.6919 2029.5164 l
1277.2798 2032.1632 l
h
1281.515 2032.7225 m
S
1 J
1 j
0.60000002 i
1066.0114 2084.2949 m
1141.7346 2166.1562 l
S
0 i
CM
63.457615 25.303267 m
63.296108 25.698761 l
63.075882 25.495047 l
h
63.457615 25.303267 m
f
0 J
0 j
0.1 0 0 -0.1 -50.987465 242.21254 cm
1144.4508 2169.0928 m
1142.8357 2165.1377 l
1140.6334 2167.1748 l
h
1144.4508 2169.0928 m
S
1 J
1 j
0.60000002 i
1288.7747 2073.0278 m
1195.8762 2166.637 l
S
0 i
CM
68.318398 25.26491 m
68.706635 25.443167 l
68.49369 25.65449 l
h
68.318398 25.26491 m
f
0 J
0 j
0.1 0 0 -0.1 -50.987465 242.21254 cm
1193.0586 2169.4763 m
1196.9409 2167.6936 l
1194.8115 2165.5806 l
h
1193.0586 2169.4763 m
S
1 J
1 j
0.60000002 i
1437.9344 2013.7681 m
1380.7258 2166.3208 1263.9229 2266.8723 1201.6381 2309.1577 c
S
0 i
CM
68.843994 11.073797 m
69.259735 11.172084 l
69.092598 11.421212 l
h
68.843994 11.073797 m
f
0 J
0 j
0.1 0 0 -0.1 -50.987465 242.21254 cm
1198.3146 2311.3875 m
1202.4719 2310.4045 l
1200.8005 2307.9133 l
h
1198.3146 2311.3875 m
S
1 1 1 sc
CM
68.230965 11.667191 m
69.535988 10.362172 69.535988 8.2463207 68.230965 6.9413028 c
66.925949 5.6362777 64.810097 5.6362777 63.505077 6.9413028 c
62.20005 8.2463207 62.20005 10.362172 63.505077 11.667191 c
64.810097 12.972216 66.925949 12.972216 68.230965 11.667191 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1192.1843 2305.4534 m
1205.2345 2318.5037 1205.2345 2339.6621 1192.1843 2352.7124 c
1179.134 2365.7627 1157.9756 2365.7627 1144.9254 2352.7124 c
1131.8751 2339.6621 1131.8751 2318.5037 1144.9254 2305.4534 c
1157.9756 2292.4033 1179.134 2292.4033 1192.1843 2305.4534 c
S
/Cs2 SC
0 sc
0 i
0.1 0 0 -0.1 65.868019 9.3042459 cm
-8.8959999 5.776001 m
("')[ 8.896000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
0.1 0 0 -0.1 -50.987465 242.21254 cm
1168.5548 2228.0483 m
1168.5548 2290.4658 l
S
0 i
CM
65.868019 12.765959 m
66.018021 13.165959 l
65.718018 13.165959 l
h
65.868019 12.765959 m
f
0 J
0 j
0.1 0 0 -0.1 -50.987465 242.21254 cm
1168.5548 2294.4658 m
1170.0548 2290.4658 l
1167.0548 2290.4658 l
h
1168.5548 2294.4658 m
S
/Cs2 SC
0 sc
0.1 0 0 -0.1 73.595726 2.9625354 cm
/F2.1[ 20 0 0 -20 0 0]sf
-15.035156 7.8319702 m
(!$#)[ 8.937500 12.195313 0.000000 ] xS
ep
end
%%Trailer
%%EOF
